- Fix testall

- Log some errors, for example if switch failed in async mode and just continue

- After some number of subscribers we can create publishing workers (with
  (un)subscribe/publish functions) which can publish messages in parallel.

- Should we add ID to published messages?

- Extract generic tests and erlport functions to generic modules

- Check imports in Python 3 version

- Return error for 'nouse_stdio' option on Windows? It seems this option
  unsupported or have no effect on Windows?

- Define python:format_status/2 to eliminate errors with big binary messages?

- Add publish/subscribe mode with direct messaging support? Pids, funs, MFAs
  can be subscribed in Erlang and callable objects in Python.

- Add 'threaded' mode for switch and run switch call in threads in Python. What
  is the use case for this mode? Threads:

  - Receive thread
  - Call Python thread
  - Call Erlang threads. We can use round-robin to send messages through Erlang
    call threads.

- Add custom encode/decode handlers in Erlang

- Convert Python tests from doctests to unittest

- If port was closed and we have an error to report we can try to report it
  with logging module

- Check exports in erlport/__init__.py

- Comments for modules

- How to handle Python <-> Python exceptions? We can pass it inside some error
  term. Errors/exceptions should be like opaque types marked with the language
  but store some known structures as values

- Check default port options on Windows

- Maybe force strings with {string, String} and {struct, Dict}? It can be done
  with pluggable encoder/decoder. We can add 'reach' encoder/decoder plugin
  functions

- Support argparse instead of optparse on Python 3?

- Python 3, other languages? Ruby? What about different Ruby versions?

- Add worker_pool module with pluggable workers selection policies

- Maybe we can try variable length length field as in Twisted Banana/Protocol
  Buffers protocols?
