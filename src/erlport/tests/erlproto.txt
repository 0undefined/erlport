Erlang port protocol
====================

Setup test modules, classes and functions:

    >>> import os
    >>> from erlport.erlproto import Port, Protocol
    >>> from erlport.erlterms import Atom, encode, decode

    >>> class TestProtocol(Protocol):
    ...
    ...     def handle_test(self, value):
    ...         return value

    >>> def test(proto, packet=1):
    ...     r, out_d = os.pipe()
    ...     in_d, w = os.pipe()
    ...
    ...     port = Port(packet, descriptors=(r, w))
    ...     port2 = Port(packet, descriptors=(in_d, out_d))
    ...     proto.connected(port)
    ...     port2.write((Atom("test"), u"value"))
    ...     message = port.read()
    ...     proto.handle(message)
    ...     result = port2.read()
    ...     proto.disconnected(EOFError())
    ...     return result

Test protocol with different options:

    >>> test(TestProtocol())
    string(u'value')

    >>> test(TestProtocol(), packet=2)
    string(u'value')

    >>> test(TestProtocol(), packet=4)
    string(u'value')
